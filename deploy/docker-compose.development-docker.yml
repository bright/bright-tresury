version: '3'
services:
    backend:
        build:
            context: ../
            dockerfile: backend/Dockerfile
            args:
                REACT_APP_DEPLOY_ENV: development
        ports:
            - '3001:3001'
        environment:
            DEPLOY_ENV: 'development-docker'
        command: bash -c "while !</dev/tcp/database/5432; do sleep 1; done; DATABASE_USERNAME=deployer npm run database:migrate && npm run main:dist"
        depends_on:
            - database
            - substrate
            - authorization
    database:
        build:
            context: ./database
        ports:
            - '5432:5432'
        volumes:
            - ${PROJECT_DIR:-../}/deploy/pg-data:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U postgres; do sleep 1; done
        restart: unless-stopped
    substrate:
        image: parity/polkadot:v0.8.30
        ports:
            - '9944:9944'
        command: --rpc-external --ws-external --dev
        volumes:
            - ${PROJECT_DIR:-../}/deploy/polkadot-data:/polkadot
        restart: unless-stopped
    authorization:
        ports:
            - '3567:3567'
        image: supertokens/supertokens-postgresql:3.3
        depends_on:
            - database
        environment:
            - POSTGRESQL_USER=authorization_manager
            - POSTGRESQL_PASSWORD=password
            - POSTGRESQL_HOST=database
            - POSTGRESQL_PORT=5432
            - POSTGRESQL_DATABASE_NAME=treasury_authorization
        restart: unless-stopped
